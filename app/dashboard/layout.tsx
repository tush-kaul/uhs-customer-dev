// "use client";
// import type { Metadata } from "next";
import { IBM_Plex_Sans, IBM_Plex_Mono } from "next/font/google";
import "../globals.css";
// import Sidebar from "@/components/sidebar";
// import TopNav from "@/components/layout/TopNav";
// import { useState } from "react";
import { cn } from "@/lib/utils";
import { SidebarProvider } from "@/components/ui/sidebar";
import { AppSidebar } from "@/components/app-sidebar";
import { TopNav } from "@/components/layout/TopNav";
import { Toaster } from "@/components/ui/sonner";
import { UserDataProvider } from "@/hooks/user-provider";
import { Providers } from "../providers";
// import Image from "next/image";
// import Image from "next/image";
// import { SidebarProvider, SidebarTrigger } from "@/components/ui/sidebar";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

export const ibmPlexSans = IBM_Plex_Sans({
  weight: ["100", "200", "300", "400", "500", "600", "700"],
  subsets: ["latin"],
  variable: "--font-ibm-plex-sans",
});

export const ibmPlexMono = IBM_Plex_Mono({
  weight: ["100", "200", "300", "400", "500", "600", "700"],
  subsets: ["latin"],
  variable: "--font-ibm-plex-mono",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  // const toggleSidebar = () => {
  // 	setIsSidebarOpen(!isSidebarOpen);
  // };

  return (
    <html lang='en' suppressHydrationWarning>
      <body
        className={cn(
          "flex relative",
          ibmPlexSans.variable,
          ibmPlexMono.variable,
          "antialiased"
        )}>
        <UserDataProvider>
          <SidebarProvider>
            <AppSidebar />
            <main className='w-full flex flex-col pt-[var(--topnav-height)]'>
              <TopNav />
              <Providers>{children}</Providers>
            </main>
            <Toaster />
          </SidebarProvider>
        </UserDataProvider>
      </body>
    </html>
  );
}
